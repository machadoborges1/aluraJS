    console.error() para exibir mensagens de erro;
    console.table() para visualizar de forma mais organizada informações tabulares;
    console.time() e console.timeEnd() para temporizar período que uma operação de código leva para ser iniciada e concluída;
    console.trace() para exibir a stacktrace de todos os pontos (ou seja, os arquivos chamados) por onde o código executado passou durante a execução.
    
    
Alternativa correta! Isso aí. Diferente de outras linguagens de programação como Java ou Python, divisão por zero no JavaScript não gera um erro. O retorno desta operação é infinito ou infinito negativo (Infinity). Porém, a divisão de zero por zero resulta num NaN (not a number).



    Math.round(): Faz o arredondamento (round em inglês) de um número de ponto flutuante para o inteiro mais próximo.
        Math.round(4.3) retorna 4
        Math.round(3.85) retorna 4
        Math.round(2.5) retorna 3, quando o número termina com 0.5 a função arredonda para cima

    Math.ceil(): Faz o arredondamento para o valor mais alto, também conhecido como teto (ceil em inglês).
        Math.ceil(5.2) retorna 6

    Math.floor(): Faz o arredondamento para o valor mais baixo, também conhecido como piso (floor em inglês).
        Math.floor(5.2) retorna 5

    Math.trunc() : Desconsidera os números decimais, o que é conhecido como truncamento.
        Math.trunc(4.3) retorna 4
        Math.trunc(4.8) retorna 4

    Math.pow() : Faz a exponenciação de 2 números, quando for simples, como ao quadrado(2) ou cubo(3). Recomenda-se usar a multiplicação por ser mais rápido.
        Math.pow(4 , 2) retorna 4^2 = 16
        Math.pow(2.5 , 1.5) retorna 2.5^(3/2) = 3.9528 ...

    Math.sqrt() : Retorna a raiz quadrada de um número.
        Math.sqrt(64) retorna 8

    Math.min(): Retorna o menor valor entre os argumentos.
        Math.min(0, 150, 30, 20, -8, -200) retorna -200

    Math.max(): Retorna o maior valor entre os argumentos.
        Math.max(0, 150, 30, 20, -8, -200) retorna 150

    Math.random(): Retorna um valor randômico (random em inglês) entre 0 e 1, então não teremos um valor esperado para receber.
        Math.random() retorna 0.7456916270759015
        Math.random() retorna 0.15449802102729304
        Math.random() retorna 0.4214269561951203




    concat()
        Junta dois arrays, colocando o array passado como argumento, logo depois do primeiro. Em português essa operação é conhecida como concatenação.
        Não altera o array no qual foi chamado, então precisamos salvar esse resultado em um novo array.

    filter()
        Retorna uma lista contando todos os elementos que passaram em um teste, ou seja, uma função escrita por nós.
        Não altera o array onde foi chamado, então precisamos salvar esse resultado em um novo array.

    find()
        Funciona de forma parecida com o filter, porém retorna apenas o primeiro valor que satisfizer o teste, podendo ser uma string ou um número.

    findIndex()
        Funciona igual o find(), mas retorna o índice em vez do elemento, possibilitando usá-lo em outras partes do código.

    indexOf()
        Localiza e retorna o índice referente à primeira ocorrência de determinado valor em um array. Caso não exista nenhuma ocorrência do valor, retorna -1.

    lastIndexOf()
        Funciona da mesma forma que o indexOf(), porém retorna o índice referente à última ocorrência de um valor em um array, varrendo o array de trás para frente. 

    forEach()
        Executa uma função em cada elemento do array de forma individual.
        Não altera o array original e nem retorna um valor, deixando esse trabalho a cargo da função escolhida.

    pop()
        Retira o último elemento do array.
        Altera o array original removendo o elemento.

    shift()
        Retira o primeiro elemento do array.
        Altera o array original removendo o elemento e trocando o índice de todos os elementos para um a menos do que eram, o índice 1 passa a ser o 0, o 2 passa a ser o 1, e assim por diante.

    push()
        Adiciona o elemento passado como parâmetro do array, porém na última posição.
        Altera o array original com o novo valor.

    unshift()
        Funciona igual ao push(), porém adiciona na primeira posição e acaba trocando o índice de todos os elementos.
        Altera o array original com o novo valor.

    reduce()
        Utiliza uma função definida pelo usuário em cada um dos elementos, guardando o resultado em uma variável que pode ser acessada dentro da função que foi definida, retornando um único valor no final, reduzindo o array para um único valor.

    reduceRight()
        Funciona igual o reduce() porém começa do final do array e segue até o início.

    reverse()
        Inverte a ordem dos elementos do array, então o primeiro vira o último, o segundo o penúltimo e assim por diante.

    slice()
        Copia uma parte do array para outro array.

    sort()
        Organiza o array de acordo com a classificação Unicode, onde os números vêm antes das letras, porém não funciona corretamente para números, onde temos que definir uma função que irá auxiliar o comando.

    splice()
        Consegue remover, um ou mais elementos consecutivos caso o segundo parâmetro tenha um valor maior que 0, e incluir um ou mais elementos a partir de um índice escolhido.

